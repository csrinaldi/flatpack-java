<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>flatpack-policy</artifactId>
  <name>FlatPack Security Policy</name>

  <parent>
    <groupId>com.getperka.flatpack</groupId>
    <artifactId>flatpack-parent</artifactId>
    <version>2.20.2-SNAPSHOT</version>
  </parent>

  <scm>
    <connection>scm:git:git@git.getperka.com:flatpack.git</connection>
    <url>scm:git:git@git.getperka.com:flatpack.git</url>
    <developerConnection>scm:git:git@git.getperka.com:flatpack.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <dependencies>
    <dependency>
      <groupId>com.getperka.flatpack</groupId>
      <artifactId>flatpack-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.getperka.flatpack</groupId>
      <artifactId>flatpack-thirdparty</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- Injection -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Because major versions of ASM do not maintain binary compatibility, 
        we'll pack the minimum amount of stuff necessary to make the parsing code 
        actually run into our output jar and then relocate the classes to prevent 
        binary conflicts. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <artifactSet>
            <includes>
              <include>org.parboiled:*</include>
              <include>org.ow2.asm:*</include>
            </includes>
          </artifactSet>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
          <relocations>
            <relocation>
              <pattern>org.objectweb.asm</pattern>
              <shadedPattern>com.getperka.flatpack.policy.thirdparty.asm4</shadedPattern>
            </relocation>
          </relocations>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
